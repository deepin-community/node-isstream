Description: drop test that depends on ole readable-stream
Author: Yadd <yadd@debian.org>
Forwarded: not-needed
Last-Update: 2021-11-20

--- a/test.js
+++ b/test.js
@@ -9,8 +9,6 @@
   , isDuplex         = require('./').isDuplex
 
   , CoreStreams      = require('stream')
-  , ReadableStream10 = require('./readable-stream-1.0/')
-  , ReadableStream11 = require('./readable-stream-1.1/')
 
 
 function test (pass, type, stream) {
@@ -76,19 +74,6 @@
 test(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
 test(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
 
-test(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
-test(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
-test(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
-test(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
-test(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
-
-test(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
-test(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
-test(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
-test(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
-test(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
-
-
 testReadable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())
 testReadable(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())
 testReadable(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())
@@ -96,19 +81,6 @@
 testReadable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
 testReadable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
 
-testReadable(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
-testReadable(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
-testReadable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
-testReadable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
-testReadable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
-
-testReadable(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
-testReadable(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
-testReadable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
-testReadable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
-testReadable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
-
-
 testWritable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())
 testWritable(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())
 testWritable(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())
@@ -116,19 +88,6 @@
 testWritable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
 testWritable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
 
-testWritable(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
-testWritable(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
-testWritable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
-testWritable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
-testWritable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
-
-testWritable(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
-testWritable(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
-testWritable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
-testWritable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
-testWritable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
-
-
 testDuplex(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())
 testDuplex(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())
 testDuplex(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())
@@ -136,20 +95,7 @@
 testDuplex(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
 testDuplex(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
 
-testDuplex(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
-testDuplex(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
-testDuplex(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
-testDuplex(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
-testDuplex(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
-
-testDuplex(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
-testDuplex(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
-testDuplex(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
-testDuplex(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
-testDuplex(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
-
-
-;[ CoreStreams, ReadableStream10, ReadableStream11 ].forEach(function (p) {
+;[ CoreStreams ].forEach(function (p) {
   [ 'Stream', 'Readable', 'Writable', 'Duplex', 'Transform', 'PassThrough' ].forEach(function (k) {
     if (!p[k])
       return
